// Mocks generated by Mockito 5.4.5 from annotations
// in climax/test/features/home/data/repositories/home_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:climax/core/api/api_consumer.dart' as _i2;
import 'package:climax/features/home/data/datasources/home_remote_data_source.dart'
    as _i5;
import 'package:climax/features/home/data/models/weather_model.dart' as _i4;
import 'package:dio/dio.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiConsumer_0 extends _i1.SmartFake implements _i2.ApiConsumer {
  _FakeApiConsumer_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_1<T> extends _i1.SmartFake implements _i3.Response<T> {
  _FakeResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMain_2 extends _i1.SmartFake implements _i4.Main {
  _FakeMain_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWind_3 extends _i1.SmartFake implements _i4.Wind {
  _FakeWind_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWeatherModel_4 extends _i1.SmartFake implements _i4.WeatherModel {
  _FakeWeatherModel_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [HomeRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRemoteDataSource extends _i1.Mock
    implements _i5.HomeRemoteDataSource {
  @override
  _i2.ApiConsumer get apiConsumer =>
      (super.noSuchMethod(
            Invocation.getter(#apiConsumer),
            returnValue: _FakeApiConsumer_0(
              this,
              Invocation.getter(#apiConsumer),
            ),
            returnValueForMissingStub: _FakeApiConsumer_0(
              this,
              Invocation.getter(#apiConsumer),
            ),
          )
          as _i2.ApiConsumer);

  @override
  _i6.Future<_i3.Response<dynamic>> getCurrentWeather(
    double? lat,
    double? lon,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentWeather, [lat, lon]),
            returnValue: _i6.Future<_i3.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(#getCurrentWeather, [lat, lon]),
              ),
            ),
            returnValueForMissingStub: _i6.Future<_i3.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(#getCurrentWeather, [lat, lon]),
              ),
            ),
          )
          as _i6.Future<_i3.Response<dynamic>>);
}

/// A class which mocks [WeatherModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherModel extends _i1.Mock implements _i4.WeatherModel {
  @override
  List<_i4.Weather> get weather =>
      (super.noSuchMethod(
            Invocation.getter(#weather),
            returnValue: <_i4.Weather>[],
            returnValueForMissingStub: <_i4.Weather>[],
          )
          as List<_i4.Weather>);

  @override
  _i4.Main get main =>
      (super.noSuchMethod(
            Invocation.getter(#main),
            returnValue: _FakeMain_2(this, Invocation.getter(#main)),
            returnValueForMissingStub: _FakeMain_2(
              this,
              Invocation.getter(#main),
            ),
          )
          as _i4.Main);

  @override
  _i4.Wind get wind =>
      (super.noSuchMethod(
            Invocation.getter(#wind),
            returnValue: _FakeWind_3(this, Invocation.getter(#wind)),
            returnValueForMissingStub: _FakeWind_3(
              this,
              Invocation.getter(#wind),
            ),
          )
          as _i4.Wind);

  @override
  int get timezone =>
      (super.noSuchMethod(
            Invocation.getter(#timezone),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i7.dummyValue<String>(this, Invocation.getter(#name)),
            returnValueForMissingStub: _i7.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  List<Object> get props =>
      (super.noSuchMethod(
            Invocation.getter(#props),
            returnValue: <Object>[],
            returnValueForMissingStub: <Object>[],
          )
          as List<Object>);

  @override
  bool get stringify =>
      (super.noSuchMethod(
            Invocation.getter(#stringify),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i4.WeatherModel copyWith({
    List<_i4.Weather>? weather,
    _i4.Main? main,
    _i4.Wind? wind,
    int? timezone,
    String? name,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #weather: weather,
              #main: main,
              #wind: wind,
              #timezone: timezone,
              #name: name,
            }),
            returnValue: _FakeWeatherModel_4(
              this,
              Invocation.method(#copyWith, [], {
                #weather: weather,
                #main: main,
                #wind: wind,
                #timezone: timezone,
                #name: name,
              }),
            ),
            returnValueForMissingStub: _FakeWeatherModel_4(
              this,
              Invocation.method(#copyWith, [], {
                #weather: weather,
                #main: main,
                #wind: wind,
                #timezone: timezone,
                #name: name,
              }),
            ),
          )
          as _i4.WeatherModel);

  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(
            Invocation.method(#toMap, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  String toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.method(#toJson, []),
            ),
            returnValueForMissingStub: _i7.dummyValue<String>(
              this,
              Invocation.method(#toJson, []),
            ),
          )
          as String);
}
